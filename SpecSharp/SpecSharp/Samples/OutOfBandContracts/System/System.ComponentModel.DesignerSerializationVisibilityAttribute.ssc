//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;
using Microsoft.Contracts;

namespace System.ComponentModel {
  // Summary:
  //     Specifies the type of persistence to use when serializing a property on a
  //     component at design time.
  [AttributeUsage(AttributeTargets.Method|AttributeTargets.Property)]
  public sealed class DesignerSerializationVisibilityAttribute : Attribute {
    // Summary:
    //     Specifies that a serializer should serialize the contents of the property,
    //     rather than the property itself. This field is read-only.
    public static readonly DesignerSerializationVisibilityAttribute Content;
    //
    // Summary:
    //     Specifies the default value, which is System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible,
    //     that is, a visual designer uses default rules to generate the value of a
    //     property. This static field is read-only.
    public static readonly DesignerSerializationVisibilityAttribute Default;
    //
    // Summary:
    //     Specifies that a serializer should not serialize the value of the property.
    //     This static field is read-only.
    public static readonly DesignerSerializationVisibilityAttribute Hidden;
    //
    // Summary:
    //     Specifies that a serializer should be allowed to serialize the value of the
    //     property. This static field is read-only.
    public static readonly DesignerSerializationVisibilityAttribute Visible;

    // Summary:
    //     Initializes a new instance of the System.ComponentModel.DesignerSerializationVisibilityAttribute
    //     class using the specified System.ComponentModel.DesignerSerializationVisibility
    //     value.
    //
    // Parameters:
    //   visibility:
    //     One of the System.ComponentModel.DesignerSerializationVisibility values.
    public DesignerSerializationVisibilityAttribute (DesignerSerializationVisibility visibility);

    // Summary:
    //     Gets a value indicating the basic serialization mode a serializer should
    //     use when determining whether and how to persist the value of a property.
    //
    // Returns:
    //     One of the System.ComponentModel.DesignerSerializationVisibility values.
    //     The default is System.ComponentModel.DesignerSerializationVisibility.Visible.
    public DesignerSerializationVisibility Visibility { get; }

    // Summary:
    //     Indicates whether this instance and a specified object are equal.
    //
    // Parameters:
    //   obj:
    //     Another object to compare to.
    //
    // Returns:
    //     true if obj is equal to this instance; otherwise, false.
    [Pure][Reads(ReadsAttribute.Reads.Nothing)]
    public override bool Equals (object obj);
    //
    // Summary:
    //     Returns the hash code for this object.
    //
    // Returns:
    //     A 32-bit signed integer hash code.
    [Pure][Reads(ReadsAttribute.Reads.Owned)]
    public override int GetHashCode ();
    //
    // Summary:
    //     Gets a value indicating whether the current value of the attribute is the
    //     default value for the attribute.
    //
    // Returns:
    //     true if the attribute is set to the default value; otherwise, false.
    public override bool IsDefaultAttribute ();
  }
}
