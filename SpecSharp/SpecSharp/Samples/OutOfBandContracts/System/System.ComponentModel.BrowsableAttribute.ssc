//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;
using Microsoft.Contracts;

namespace System.ComponentModel {
  // Summary:
  //     Specifies whether a property or event should be displayed in a Properties
  //     window.
  [AttributeUsage(AttributeTargets.All)]
  public sealed class BrowsableAttribute : Attribute {
    // Summary:
    //     Specifies the default value for the System.ComponentModel.BrowsableAttribute,
    //     which is System.ComponentModel.BrowsableAttribute.Yes. This static field
    //     is read-only.
    public static readonly BrowsableAttribute Default;
    //
    // Summary:
    //     Specifies that a property or event cannot be modified at design time. This
    //     static field is read-only.
    public static readonly BrowsableAttribute No;
    //
    // Summary:
    //     Specifies that a property or event can be modified at design time. This static
    //     field is read-only.
    public static readonly BrowsableAttribute Yes;

    // Summary:
    //     Initializes a new instance of the System.ComponentModel.BrowsableAttribute
    //     class.
    //
    // Parameters:
    //   browsable:
    //     true if a property or event can be modified at design time; otherwise, false.
    //     The default is true.
    public BrowsableAttribute (bool browsable);

    // Summary:
    //     Gets a value indicating whether an object is browsable.
    //
    // Returns:
    //     true if the object is browsable; otherwise, false.
    public bool Browsable { get; }

    // Summary:
    //     Indicates whether this instance and a specified object are equal.
    //
    // Parameters:
    //   obj:
    //     Another object to compare to.
    //
    // Returns:
    //     true if obj is equal to this instance; otherwise, false.
    [Pure][Reads(ReadsAttribute.Reads.Nothing)]
    public override bool Equals (object obj);
    //
    // Summary:
    //     Returns the hash code for this instance.
    //
    // Returns:
    //     A 32-bit signed integer hash code.
    [Pure][Reads(ReadsAttribute.Reads.Owned)]
    public override int GetHashCode ();
    //
    // Summary:
    //     Determines if this attribute is the default.
    //
    // Returns:
    //     true if the attribute is the default value for this attribute class; otherwise,
    //     false.
    public override bool IsDefaultAttribute ();
  }
}
