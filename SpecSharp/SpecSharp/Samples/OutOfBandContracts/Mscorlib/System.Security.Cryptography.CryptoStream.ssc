//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.Security.Cryptography
{

    public class CryptoStream
    {

        public Int64 Position
        {
          get;
          set;
        }

        public bool CanWrite
        {
          get;
        }

        public bool CanSeek
        {
          get;
        }

        public Int64 Length
        {
          get;
        }

        public bool CanRead
        {
          get;
        }

        public void Clear ();

        public void Write (Byte[] buffer, int offset, int count)
            requires offset >= 0 otherwise ArgumentOutOfRangeException;
            requires count >= 0 otherwise ArgumentOutOfRangeException;
            requires (buffer.Length - offset) >= count otherwise ArgumentException;

        public int Read (Byte[] buffer, int offset, int count)
            requires offset >= 0 otherwise ArgumentOutOfRangeException;
            requires count >= 0 otherwise ArgumentOutOfRangeException;
            requires (buffer.Length - offset) >= count otherwise ArgumentException;

        public void SetLength (Int64 value);

        public Int64 Seek (Int64 offset, System.IO.SeekOrigin origin);

        public void Flush ();

        public void Close ();

        public void FlushFinalBlock ();

        public CryptoStream (System.IO.Stream stream, ICryptoTransform transform, CryptoStreamMode mode);
    }
}
