//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.Runtime.Serialization
{
    
    public interface ISurrogateSelector
    {
        void ChainSelector(ISurrogateSelector! selector);
        /*
            requires selector != null otherwise ArgumentNullException;
            requires selector != this otherwise SerializationException;
            */

        ISurrogateSelector GetNextSelector();

        ISerializationSurrogate GetSurrogate(Type! type, StreamingContext context, out ISurrogateSelector selector);
        // FIXME - why aren't these allowed?
           // requires type != null otherwise ArgumentNullException;
            //requires surrogate != null otherwise ArgumentNullException;
    }
    

    public class SurrogateSelector : ISurrogateSelector
    {

        public void RemoveSurrogate (Type! type, StreamingContext context)
            requires type != null otherwise ArgumentNullException;

        public ISerializationSurrogate GetSurrogate (Type! type, StreamingContext context, out ISurrogateSelector selector);
            //requires type != null otherwise ArgumentNullException;

        public ISurrogateSelector GetNextSelector ();

        public void ChainSelector (ISurrogateSelector! selector);
        /*
            requires selector != null otherwise ArgumentNullException;
            requires selector != this otherwise SerializationException;
            */

        public void AddSurrogate (Type! type, StreamingContext context, out ISerializationSurrogate! surrogate)
            requires type != null otherwise ArgumentNullException;
            requires surrogate != null otherwise ArgumentNullException;

        public SurrogateSelector ();
    }
}
