//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.Runtime.Remoting
{

    public class RemotingServices
    {

        public static void LogRemotingStage (int arg0);

        public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage (MarshalByRefObject! target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg)
            requires target != null otherwise ArgumentNullException;

        public static Type GetServerTypeForUri (string URI);

        public static bool IsOneWay (System.Reflection.MethodBase method);

        public static bool IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage msg);

        public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);

        public static ObjRef GetObjRefForProxy (MarshalByRefObject obj);

        public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy (MarshalByRefObject obj);

        public static bool Disconnect (MarshalByRefObject obj);

        public static object Connect (Type classToProxy, string url, object data);

        public static object Connect (Type classToProxy, string url);

        public static object Unmarshal (ObjRef objectRef, bool fRefine);

        public static object Unmarshal (ObjRef objectRef);

        public static void GetObjectData (object! obj, System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context)
            requires obj != null otherwise ArgumentNullException;
            requires info != null otherwise ArgumentNullException;

        public static ObjRef Marshal (MarshalByRefObject Obj, string ObjURI, Type RequestedType);

        public static ObjRef Marshal (MarshalByRefObject Obj, string URI);

        public static ObjRef Marshal (MarshalByRefObject Obj);

        public static void SetObjectUriForMarshal (MarshalByRefObject obj, string uri);

        public static string GetObjectUri (MarshalByRefObject obj);

        public static object GetLifetimeService (MarshalByRefObject obj);

        public static string GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);

        public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy (object arg0);

        public static bool IsObjectOutOfAppDomain (object tp);

        public static bool IsObjectOutOfContext (object tp);

        public static bool IsTransparentProxy (object arg0);
    }
}
