//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.Globalization
{

    public class Calendar
    {

        public Int32[] Eras
        {
          get;
        }

        public int TwoDigitYearMax
        {
          get;
          set;
        }

        public int ToFourDigitYear (int year)
            requires year >= 0 otherwise ArgumentOutOfRangeException;

        public DateTime ToDateTime (int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7);

        public DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);

        public bool IsLeapYear (int arg0, int arg1);

        public bool IsLeapYear (int year);

        public bool IsLeapMonth (int arg0, int arg1, int arg2);

        public bool IsLeapMonth (int year, int month);

        public bool IsLeapDay (int arg0, int arg1, int arg2, int arg3);

        public bool IsLeapDay (int year, int month, int day);

        public int GetYear (DateTime arg0);

        public int GetWeekOfYear (DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
            requires (int)firstDayOfWeek >= 0 otherwise ArgumentOutOfRangeException;
            requires (int)firstDayOfWeek <= 6 otherwise ArgumentOutOfRangeException;

        public int GetSecond (DateTime time);

        public int GetMonthsInYear (int arg0, int arg1);

        public int GetMonthsInYear (int year);

        public int GetMonth (DateTime arg0);

        public int GetMinute (DateTime time);

        public double GetMilliseconds (DateTime time);

        public int GetHour (DateTime time);

        public int GetEra (DateTime arg0);

        public int GetDaysInYear (int arg0, int arg1);

        public int GetDaysInYear (int year);

        public int GetDaysInMonth (int arg0, int arg1, int arg2);

        public int GetDaysInMonth (int year, int month);

        public int GetDayOfYear (DateTime arg0);

        public DayOfWeek GetDayOfWeek (DateTime arg0);

        public int GetDayOfMonth (DateTime arg0);

        public DateTime AddYears (DateTime arg0, int arg1);

        public DateTime AddWeeks (DateTime time, int weeks);

        public DateTime AddSeconds (DateTime time, int seconds);

        public DateTime AddMonths (DateTime arg0, int arg1);

        public DateTime AddMinutes (DateTime time, int minutes);

        public DateTime AddMilliseconds (DateTime time, double milliseconds);

        public DateTime AddHours (DateTime time, int hours);

        public DateTime AddDays (DateTime time, int days);
    }
}
