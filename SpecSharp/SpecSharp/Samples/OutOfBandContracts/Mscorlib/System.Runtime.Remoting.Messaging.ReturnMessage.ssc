//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.Runtime.Remoting.Messaging
{

    public class ReturnMessage
    {

        public Object[] OutArgs
        {
          get;
        }

        public int ArgCount
        {
          get;
        }

        public string Uri
        {
          get;
          set;
        }

        public bool HasVarArgs
        {
          get;
        }

        public int OutArgCount
        {
          get;
        }

        public System.Collections.IDictionary Properties
        {
          get;
        }

        public Object[] Args
        {
          get;
        }

        public object ReturnValue
        {
          get;
        }

        public Exception Exception
        {
          get;
        }

        public object MethodSignature
        {
          get;
        }

        public LogicalCallContext LogicalCallContext
        {
          get;
        }

        public string TypeName
        {
          get;
        }

        public System.Reflection.MethodBase MethodBase
        {
          get;
        }

        public string MethodName
        {
          get;
        }

        public string GetOutArgName (int index);

        public object GetOutArg (int argNum);

        public string GetArgName (int index)
            requires index >= 0 otherwise ArgumentOutOfRangeException;
            requires index >= 0 otherwise ArgumentOutOfRangeException;

        public object GetArg (int argNum)
            requires argNum >= 0 otherwise ArgumentOutOfRangeException;
            requires argNum >= 0 otherwise ArgumentOutOfRangeException;

        public ReturnMessage (Exception e, IMethodCallMessage mcm);

        public ReturnMessage (object ret, Object[] outArgs, int outArgsCount, LogicalCallContext callCtx, IMethodCallMessage mcm);
    }
}
