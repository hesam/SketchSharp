//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.IO
{

    public class BinaryReader
    {

        public Stream BaseStream
        {
          get;
        }

        public Byte[] ReadBytes (int count)
            requires count >= 0 otherwise ArgumentOutOfRangeException;

        public int Read (Byte[]! buffer, int index, int count)
            requires buffer != null otherwise ArgumentNullException;
            requires index >= 0 otherwise ArgumentOutOfRangeException;
            requires count >= 0 otherwise ArgumentOutOfRangeException;
            requires (buffer.Length - index) >= count otherwise ArgumentException;

        public Char[] ReadChars (int count)
            requires count >= 0 otherwise ArgumentOutOfRangeException;

        public int Read (Char[]! buffer, int index, int count)
            requires buffer != null otherwise ArgumentNullException;
            requires index >= 0 otherwise ArgumentOutOfRangeException;
            requires count >= 0 otherwise ArgumentOutOfRangeException;
            requires (buffer.Length - index) >= count otherwise ArgumentException;

        public string ReadString ();

        public Decimal ReadDecimal ();

        public double ReadDouble ();

        public Single ReadSingle ();

        public UInt64 ReadUInt64 ();

        public Int64 ReadInt64 ();

        public UInt32 ReadUInt32 ();

        public int ReadInt32 ();

        public UInt16 ReadUInt16 ();

        public Int16 ReadInt16 ();

        public Char ReadChar ();

        public SByte ReadSByte ();

        public byte ReadByte ();

        public bool ReadBoolean ();

        public int Read ();

        public int PeekChar ();

        public void Close ();

        public BinaryReader (Stream! input, System.Text.Encoding! encoding)
            requires input != null otherwise ArgumentNullException;
            requires encoding != null otherwise ArgumentNullException;

        public BinaryReader (Stream input);
    }
}
