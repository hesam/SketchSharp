//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;
using Microsoft.Contracts;

namespace System {
  // Summary:
  //     Defines a generalized method that a value type or class implements to create
  //     a type-specific method for determining equality of instances.
  public interface IEquatable<T> {
    // Summary:
    //     Indicates whether the current object is equal to another object of the same
    //     type.
    //
    // Parameters:
    //   other:
    //     An object to compare with this object.
    //
    // Returns:
    //     true if the current object is equal to the other parameter; otherwise, false.
    [Pure][Reads(ReadsAttribute.Reads.Nothing)]
    bool Equals(T other);
  }
}
