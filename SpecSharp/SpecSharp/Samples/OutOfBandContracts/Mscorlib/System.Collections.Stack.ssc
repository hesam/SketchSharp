//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;
using Microsoft.Contracts;

namespace System.Collections
{

    public class Stack
    {

        public object SyncRoot
        {
          get;
        }

        public bool IsSynchronized
        {
          get;
        }

        public int Count
        {
          get;
            ensures result >= 0;
        }
        [Pure][Reads(ReadsAttribute.Reads.Owned)]
        public Object[]! ToArray ();

        public static Stack Synchronized (Stack! stack)
            requires stack != null otherwise ArgumentNullException;

        public void Push (object obj);
            ensures this.Count == old(this.Count)+1;

        public object Pop ()
            requires this.Count > 0;
            ensures this.Count == old(this.Count)-1;

        public object Peek ();
            requires this.Count > 0;

        [Pure] [GlobalAccess(false)] [Escapes(true,false)]
        public IEnumerator! GetEnumerator ();
            ensures result.IsNew;

        public void CopyTo (Array! array, int index)
          requires 0 <= index && index < array.Length;
          requires (array.Length - index) >= this.Count;            

        public bool Contains (object obj);

        public object Clone ();

        public void Clear ();

        public Stack (ICollection! col)
            requires col != null otherwise ArgumentNullException;

        public Stack (int initialCapacity)
            requires initialCapacity >= 0 otherwise ArgumentOutOfRangeException;

        public Stack ();
    }
}
