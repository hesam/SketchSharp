//-----------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//-----------------------------------------------------------------------------
/*\
 *     IMPORTANT! This is an unofficial contract.
 *                It may be inaccurate and incomplete.
 *                It is being provided only as a sample of how to write
 *                out-of-band contracts.
\*/
using System;

namespace System.Reflection.Emit
{

    public class AssemblyBuilder
    {

        public string ImageRuntimeVersion
        {
          get;
        }

        public string CodeBase
        {
          get;
        }

        public System.Reflection.MethodInfo EntryPoint
        {
          get;
        }

        public string Location
        {
          get;
        }

        public Type[] GetExportedTypes ();

        public void Save (string assemblyFileName);

        public void SetCustomAttribute (CustomAttributeBuilder! customBuilder)
            requires customBuilder != null otherwise ArgumentNullException;

        public void SetCustomAttribute (System.Reflection.ConstructorInfo! con, Byte[]! binaryAttribute)
            requires con != null otherwise ArgumentNullException;
            requires binaryAttribute != null otherwise ArgumentNullException;

        public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, PEFileKinds fileKind);

        public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);

        public ModuleBuilder GetDynamicModule (string name);

        public void DefineUnmanagedResource (string! resourceFileName)
            requires resourceFileName != null otherwise ArgumentNullException;

        public void DefineUnmanagedResource (Byte[]! resource)
            requires resource != null otherwise ArgumentNullException;

        public void DefineVersionInfoResource ();

        public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);

        public System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);

        public System.IO.Stream GetManifestResourceStream (string name);

        public System.IO.Stream GetManifestResourceStream (Type type, string name);

        public System.IO.FileStream[] GetFiles (bool getResourceModules);

        public System.IO.FileStream GetFile (string name);

        public String[] GetManifestResourceNames ();

        public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);

        public void AddResourceFile (string name, string fileName);

        public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);

        public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);

        public ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);

        public ModuleBuilder DefineDynamicModule (string name, string fileName);

        public ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);

        public ModuleBuilder DefineDynamicModule (string name);
    }
}
