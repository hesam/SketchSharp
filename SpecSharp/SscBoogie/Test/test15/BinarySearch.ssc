//use command line switch /infer:p
public class C {
  // These programs were inspired by an initiated by Josh Bloch and John Rushby, June 2006.

  // This is the same program as above, but with a specification.
  public static int BinarySearch1(int[]! a, int key, int minIndex, int maxIndex)
    requires 0 <= minIndex && minIndex <= maxIndex && maxIndex < a.Length;
    requires forall{int i in (0: a.Length), int j in (i: a.Length); a[i] <= a[j]};
    ensures minIndex <= result && result < maxIndex  ==> a[result] == key;
    ensures result < 0 ==> forall{int i in (minIndex: maxIndex); a[i] != key};
  {
    int low = minIndex;
    int high = maxIndex - 1;

    while (low <= high)
      invariant minIndex <= low && high+1 <= maxIndex;
      invariant forall{int i in (minIndex: low); a[i] != key};
      invariant forall{int i in (high+1.. maxIndex); a[i] != key};//ERROR: (high+1: maxIndex) instead
    {
      int mid = (low + high) / 2;
      int midVal = a[mid];

      if (midVal < key) {
        low = mid + 1;
      } else if (key < midVal) {
        high = mid - 1;
      } else {
        return mid; // key found
      }
    }
    return -(low + 1);  // key not found.
  }
}

//current error:
// binarySearch.ssc(17,17): Error: Initially: Loop invariant might not hold: forall{int i in (high+1.. maxIndex); a[i] != key}

//better error:
// concrete example: minIndex == 0 ; maxIndex == 0; high == -1 ; a[0] = 5 ; key == 6; a.Length == 1; 
