class C {
  int Sum(int[]! a)
    requires a.Length != 0; // this is bogus in general, but used here to get into the loop
    ensures result == sum{int k in (0:a.Length); a[k]};
  {
    int s = 0;
    for (int i = 0; i < a.Length; i++)
      invariant 0 <= i && i < a.Length; // i <= a.Length to fix
      invariant s == sum{int k in (0:i); a[k]};
    {
      s += a[i];
    }
    return s;
  }
}

//current error:
// summation.ssc(8,17): Error: After loop iteration: Loop invariant might not hold: i < a.Length
// summation.ssc(11,7):    (trace position related to previous error)

//better error:
// add to prior error a concrete example: a.Length == 1; i == 1; s == a[0];
